{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\"\r\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\"\r\nimport rehypePrettyCode from \"rehype-pretty-code\"\r\nimport rehypeSlug from \"rehype-slug\"\r\nimport remarkGfm from \"remark-gfm\"\r\n\r\n\r\n/** @type {import('contentlayer/source-files').ComputedFields} */\r\nconst computedFields = {\r\n    slug: {\r\n      type: \"string\",\r\n      resolve: (doc) => `/${doc._raw.flattenedPath}`,\r\n    },\r\n    slugAsParams: {\r\n      type: \"string\",\r\n      resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\r\n    },\r\n  }\r\n\r\n  \r\n  export const Post = defineDocumentType(() => ({\r\n    name: \"Post\",\r\n    filePathPattern: `post/**/*.mdx`,\r\n    contentType: \"mdx\",\r\n    fields: {\r\n      title: {\r\n        type: \"string\",\r\n        required: true,\r\n      },\r\n      description: {\r\n        type: \"string\",\r\n      },\r\n      date: {\r\n        type: \"date\",\r\n        required: true,\r\n      },\r\n      published: {\r\n        type: \"boolean\",\r\n        default: true,\r\n      },\r\n      image: {\r\n        type: \"string\",\r\n        // required: true,\r\n      },\r\n      authors: {\r\n        // Reference types are not embedded.\r\n        // Until this is fixed, we can use a simple list.\r\n        // type: \"reference\",\r\n        // of: Author,\r\n        type: \"list\",\r\n        of: { type: \"string\" },\r\n        required: true,\r\n      },\r\n    },\r\n    computedFields,\r\n  }))\r\n  \r\n\r\n  export default makeSource({\r\n    contentDirPath: \"src/content\",\r\n    documentTypes: [Post],\r\n    mdx: {\r\n      remarkPlugins: [remarkGfm],\r\n      rehypePlugins: []\r\n      //  [ // rehypeSlug,\r\n      //   // [\r\n      //   //   rehypePrettyCode,\r\n      //   //   {\r\n      //   //     theme: \"github-dark\",\r\n      //   //     onVisitLine(node) {\r\n      //   //       // Prevent lines from collapsing in `display: grid` mode, and allow empty\r\n      //   //       // lines to be copy/pasted\r\n      //   //       if (node.children.length === 0) {\r\n      //   //         node.children = [{ type: \"text\", value: \" \" }]\r\n      //   //       }\r\n      //   //     },\r\n      //   //     onVisitHighlightedLine(node) {\r\n      //   //       node.properties.className.push(\"line--highlighted\")\r\n      //   //     },\r\n      //   //     onVisitHighlightedWord(node) {\r\n      //   //       node.properties.className = [\"word--highlighted\"]\r\n      //   //     },\r\n      //   //   },\r\n      //   ],\r\n      //   [\r\n      //     rehypeAutolinkHeadings,\r\n      //     {\r\n      //       properties: {\r\n      //         className: [\"subheading-anchor\"],\r\n      //         ariaLabel: \"Link to section\",\r\n      //       },\r\n      //     },\r\n      //   ],\r\n      // ],\r\n    },\r\n  })"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAItB,IAAM,iBAAiB;AAAA,EACnB,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACvE;AACF;AAGO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,IACR;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA;AAAA,IAER;AAAA,IACA,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,MAKP,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAGF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BlB;AACF,CAAC;",
  "names": []
}
